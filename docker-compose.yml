services:
  db:
    image: postgres:16
    container_name: nota_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: nota_db        
      POSTGRES_USER: ${DB_USER}       
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: nota_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    build: .
    command: celery -A nota_db worker --loglevel=info
    volumes:
      - .:/app
      - ./processing:/processing  # Keep only the host volume mapping
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DEBUG=1
    entrypoint: ["/app/entrypoint.celery.sh"]

  web:
    build: .
    volumes:
      - .:/app
      - ./processing:/processing  # Keep only the host volume mapping
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DEBUG=1
    command: python manage.py runserver 0.0.0.0:8000
    entrypoint: ["/app/entrypoint.web.sh"]

volumes:
  postgres_data:
  redis_data:
  # Remove processing_data