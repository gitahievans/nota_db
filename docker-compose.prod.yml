version: '3.9'
services:
  db:
    image: postgres:16
    container_name: nota_db
    env_file:
      - .env.prod
    environment:
      POSTGRES_DB: nota_db        
      POSTGRES_USER: ${DB_USER}       
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: nota_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    build: .
    container_name: nota_celery
    volumes:
      - processing_data:/processing
      - nota_tmp:/tmp/nota
      - ./staticfiles:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.prod
    environment:
      - DJANGO_ENV=production
      - DEBUG=${DEBUG:-0}
    entrypoint: ["/app/entrypoint.celery.sh"]
    command: ["celery", "-A", "nota_db", "worker", "--loglevel=info"]

  web:
    build: .
    container_name: nota_web
    volumes:
      - processing_data:/processing
      - nota_tmp:/tmp/nota
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.prod
    environment:
      - DJANGO_ENV=production
      - DEBUG=${DEBUG:-0}
    entrypoint: ["/app/entrypoint.prod.sh"]

volumes:
  postgres_data:
  redis_data:
  processing_data:
  nota_tmp: